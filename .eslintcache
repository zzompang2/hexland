[{"/Users/ham/Documents/hexland/src/routes/Home.js":"1","/Users/ham/Documents/hexland/src/App.js":"2","/Users/ham/Documents/hexland/src/routes/Game.js":"3","/Users/ham/Documents/hexland/src/components/Tile.js":"4","/Users/ham/Documents/hexland/src/components/Map.js":"5","/Users/ham/Documents/hexland/src/components/Marker.js":"6"},{"size":322,"mtime":1610042098269,"results":"7","hashOfConfig":"8"},{"size":314,"mtime":1610042131795,"results":"9","hashOfConfig":"8"},{"size":3340,"mtime":1610193997185,"results":"10","hashOfConfig":"8"},{"size":1506,"mtime":1610193791925,"results":"11","hashOfConfig":"8"},{"size":2913,"mtime":1610193966361,"results":"12","hashOfConfig":"8"},{"size":999,"mtime":1610099816526,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kaqy8k",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ham/Documents/hexland/src/routes/Home.js",[],"/Users/ham/Documents/hexland/src/App.js",[],"/Users/ham/Documents/hexland/src/routes/Game.js",["27","28"],"import React from \"react\";\nimport Map from \"../components/Map\";\nimport Marker from \"../components/Marker\";\nimport \"./Game.css\";\n\nconst mapSize = {x: 9, y: 9};\nconst startPosition = {x: Math.floor(mapSize.x/2), y: Math.floor(mapSize.y/2)};\n\nclass Game extends React.Component {\n\tstate = {\n\t\tmapSize: mapSize,\n\t\tdiceValues: [0, 0],\n\t\tposition: startPosition,\n\t\tcandidatePos: [undefined, undefined],\n\t\ttilesMark: []\n\t}\n\n\tthrowDices = () => {\n\t\tconsole.log(\"주사위 던짐!\");\n\t\tconst { position, candidatePos, tilesMark } = this.state;\n\n\t\tconst one = Math.floor(Math.random() * 4) + 1;\n\t\tconst two = Math.floor(Math.random() * 4) + 1;\n\n\t\tswitch(one) {\n\t\t\tcase(1):\n\t\t\tcandidatePos[0] = {x: position.x, y: position.y - two};\n\t\t\tbreak;\n\t\t\tcase(2):\n\t\t\tcandidatePos[0] = {x: position.x + two, y: position.y};\n\t\t\tbreak;\n\t\t\tcase(3):\n\t\t\tcandidatePos[0] = {x: position.x, y: position.y + two};\n\t\t\tbreak;\n\t\t\tcase(4):\n\t\t\tcandidatePos[0] = {x: position.x - two, y: position.y};\n\t\t\tbreak;\n\t\t}\n\t\ttilesMark[candidatePos[0].y][candidatePos[0].x] = true;\n\n\t\tif(one !== two) {\n\t\t\tswitch(two) {\n\t\t\t\tcase(1):\n\t\t\t\tcandidatePos[1] = {x: position.x, y: position.y - one};\n\t\t\t\tbreak;\n\t\t\t\tcase(2):\n\t\t\t\tcandidatePos[1] = {x: position.x + one, y: position.y};\n\t\t\t\tbreak;\n\t\t\t\tcase(3):\n\t\t\t\tcandidatePos[1] = {x: position.x, y: position.y + one};\n\t\t\t\tbreak;\n\t\t\t\tcase(4):\n\t\t\t\tcandidatePos[1] = {x: position.x - one, y: position.y};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttilesMark[candidatePos[1].y][candidatePos[1].x] = true;\n\t\t}\n\n\t\tthis.setState({ diceValues: [one, two], candidatePos, tilesMark });\n\t}\n\n\thandleClick = (e) => {\n\t\tconsole.log(\"click:\", e.target.id);\n\t// \tconst { x, y } = e.target.id;\n\t// \tconst { candidatePos, tiles } = this.state;\n\n\t// \tif (candidatePos[0] !== undefined) {\n\t// \t\ttiles[candidatePos[0].y][candidatePos[0].x] = \n\t// \t\t<div\n\t// \t\tkey={candidatePos[0].x}\n\t// \t\tonClick={this.handleClick}>\n\t// \t\t\t<Tile\n\t// \t\t\tkey={candidatePos[0].x}\n\t// \t\t\tid={{x: candidatePos[0].x, y: candidatePos[0].y}}\n\t// \t\t\towner={1}\n\t// \t\t\tisMark={false} />\n\t// \t\t</div>;\n\n\t// \t\tif (candidatePos[1] !== undefined)\n\t// \t\t\ttiles[candidatePos[1].y][candidatePos[1].x] = \n\t// \t\t\t<div\n\t// \t\t\tkey={candidatePos[1].x}\n\t// \t\t\tonClick={this.handleClick}>\n\t// \t\t\t\t<Tile\n\t// \t\t\t\tkey={candidatePos[1].x}\n\t// \t\t\t\tid={{x: candidatePos[1].x, y: candidatePos[1].y}}\n\t// \t\t\t\towner={1}\n\t// \t\t\t\tisMark={false} />\n\t// \t\t\t</div>;\n\t// \t}\n\n\t// \tthis.setState({ candidatePos: [undefined, undefined] });\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { x, y } = this.state.mapSize;\n\t\tconst tilesMark = [];\n\n\t\tfor (let j=0; j<y; j++) {\n\t\t\tconst row = [];\n\n\t\t\tfor (let i=0; i<x; i++)\n\t\t\t\trow.push(false);\n\t\t\ttilesMark.push(row);\n\t\t}\n\t\tthis.setState({ tilesMark });\n\t}\n\n\trender() {\n\t\tconst { diceValues, position, tilesMark } = this.state;\n\t\tconst {\n\t\t\tthrowDices,\n\t\t\thandleClick\n\t\t} = this;\n\n\t\tconsole.log(\"현재 위치:\", position);\n\t\tconsole.log(\"주사위 결과:\", diceValues);\n\t\tconsole.log(\"tilesMark:\", tilesMark);\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div>Game Main</div>\n\t\t\t\t<div>one:{diceValues[0]} two:{diceValues[1]}</div>\n\t\t\t\t<button\n\t\t\t\tonClick={throwDices}>\n\t\t\t\t\t주사위 던지기\n\t\t\t\t</button>\n\t\t\t\t<div className=\"mapContainer\">\n\t\t\t\t\t<Map\n\t\t\t\t\ttilesMark={tilesMark}\n\t\t\t\t\thandleClick={handleClick} />\n\t\t\t\t\t<Marker id={1} position={position} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Game;","/Users/ham/Documents/hexland/src/components/Tile.js",[],"/Users/ham/Documents/hexland/src/components/Map.js",[],"/Users/ham/Documents/hexland/src/components/Marker.js",[],{"ruleId":"29","severity":1,"message":"30","line":25,"column":3,"nodeType":"31","messageId":"32","endLine":38,"endColumn":4},{"ruleId":"29","severity":1,"message":"30","line":42,"column":4,"nodeType":"31","messageId":"32","endLine":55,"endColumn":5},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase"]